{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "type": "object",
    "title": "CDIF discovery metadata schema, with schema: prefixes",
    "description": "JSON schema for JSON-LD documents that describe science datasets for the CDIF DataDiscovery profile. See https://cdif.codata.org/, USING OGC building blocks modularization.  Content based on Google guide for publishers (https://developers.google.com/search/docs/data-types/dataset), and the Earth Science Information Partners (ESIP) Science on Schema.org recommendations v1.3 prerelease (see https://doi.org/10.5281/zenodo.2628755 dataset.md for current recommendations document). The context is not specified in the schema, but must be added in instance documents. '\"@context\": {\"schema\":\"https://schema.org/\", \"dcterms\": \"http://purl.org/dc/terms/\", \"geosparql\": \"http://www.opengis.net/ont/geosparql#\", \"spdx\": \"http://spdx.org/rdf/terms#\" }' 2024-07-24, SMR change handling of registration information to align with current proposal for cross-domain interoperability (CDIF). Created by Stephen Richard 2024-07-30 based on NSF GeoCODES dataset and iSamples draft2 schema.org JSON schema. NOTE-- assumes that schema:https://schema.org is declared in context, so schema: namespace prefix is required as prefix for all schema.org elements.2025-07-24.  SMR 2025-10-23 update schemaversion to https://json-schema.org/draft/2020-12/schema; add additionalType on organization with the alt schema.org types as one option, additional required constraints in various places; update constraint on @type to require schema:Dataset. Implement using OGC buildign blocks approach. ",
    "properties": {
        "schema:keywords": {
            "description": "Keywords are an array of strings, an array of schema:DefinedTerms, or some combination of these. If you have information about a controlled vocabulary from which keywords come from, use schema:DefinedTerm to descibe that keyword. This allowed variability makes parsing metadata hard; recommend using DefinedTerm for all keywords if any of them are from a known vocabulary, otherwise an array of strings.",
            "type": "array",
            "items": {
                "anyOf": [
                    {"$ref": "#/$defs/DefinedTerm"},
                    {"type": "string"}
                ]
            }
        },
        "schema:creator": {
            "description": "author or orginator of intellectual content of dataset. Uset the JSON-LD @list construct to preserve author order. Use contributor with the Role property to specify other roles related to creation or stewardship of the resource.",
            "type": "object",
            "properties": {
                "@list": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "@id": {
                                        "type": "string",
                                        "description": "a identifier for an agent defined in this metadata, or externally; must be dereferenceable"
                                    }
                                }
                            },
                            {"$ref": "#/$defs/Person"},
                            {"$ref": "#/$defs/Organization"}
                        ]
                    }
                }
            }
        },
        "schema:contributor": {
            "description": "other parties who played a role in production of dataset",
            "type": "array",
            "items": {
                "anyOf": [
                    {
                        "type": "object",
                        "properties": {
                            "@id": {
                                "type": "string",
                                "description": "a identifier for an agent defined in this metadata, or externally; must be dereferenceable"
                            }
                        }
                    },
                    {"$ref": "#/$defs/Person"},
                    {"$ref": "#/$defs/Organization"},
                    {"$ref": "#/$defs/Contributor"}
                ]
            }
        },
        "schema:publisher": {
            "description": "Party who made the dataset publicly available",
            "anyOf": [
                {
                    "type": "object",
                    "properties": {
                        "@id": {
                            "type": "string",
                            "description": "a identifier for an agent defined in this metadata, or externally; must be dereferenceable"
                        }
                    }
                },
                {"$ref": "#/$defs/Person"},
                {"$ref": "#/$defs/Organization"}
            ]
        },
        "schema:provider": {
            "description": "Party who maintains the distribution options for the dataset. If there are multiple distributions from different providers, use the provider property on distribution/DataDownload",
            "type": "array",
            "items": {
                "anyOf": [
                    {
                        "type": "object",
                        "properties": {
                            "@id": {
                                "type": "string",
                                "description": "a identifier for an agent defined in this metadata, or externally; must be dereferenceable"
                            }
                        }
                    },
                    {"$ref": "#/$defs/Person"},
                    {"$ref": "#/$defs/Organization"}
                ]
            }
        },
        "schema:funding": {
            "type": "array",
            "items": {"$ref": "#/$defs/Funder"}
        },
        "schema:variableMeasured": {
            "description": "What does the dataset measure? (e.g., temperature, pressure)",
            "type": "array",
            "items": {"$ref": "#/$defs/VariableMeasured"}
        }    },
    "allOf": [
        {"$ref":"../../properties/cdifMandatory/cdifMandatorySchema.json"},
        {"$ref":"../../properties/cdifMandatory/cdifMandatorySchema.json"},
        {
            "required": [
                "@id",
                "@type",
                "@context",
                "schema:name",
                "schema:identifier",
                "schema:subjectOf",
                "schema:dateModified"
            ]
        },
        {
            "anyOf": [
                {
                    "required": ["schema:url"]
                },
                {
                    "required": ["schema:distribution"]
                }
            ]
        },
        {
            "anyOf": [
                {
                    "required": ["schema:license"]
                },
                {
                    "required": ["schema:conditionsOfAccess"]
                }
            ]
        }
    ],
    "$defs": {
        "DefinedTerm": {"$ref": "../../properties/definedTerm/definedTermSchema.json"},
        "LabeledLink": {"$ref": "../../properties/labeledLink/labeledLinkSchema.json"},
        "DataDownload": {"$ref": "../../properties/dataDownload/dataDownloadSchema.json"},
        "Identifier": {"$ref": "../../properties/identifier/identifierSchema.json"},
        "Person": {"$ref": "../../properties/person/personSchema.json"},
        "Organization": {"$ref": "../../properties/organization/organizationSchema.json"},
        "Contributor": {"$ref": "../../properties/agentInRole/agentInRoleSchema.json"},
        "Funder": {"$ref": "../../properties/funder/funderSchema.json"},
        "VariableMeasured": {"$ref": "../../properties/variableMeasured/variableMeasuredSchema.json"},
        "MetaMetadata": {"$ref": "../../properties/metaMetadata/metaMetadataSchema.json"}
    }
}