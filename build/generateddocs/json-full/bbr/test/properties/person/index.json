

{
  "itemIdentifier": "ogc.bbr.test.properties.person",
  "$schema": "metaschema.yaml",
  "name": "Person",
  "abstract": "Schema defining propertis of a person.",
  "status": "under-development",
  "dateTimeAddition": "2025-10-21T00:00:00Z",
  "itemClass": "schema",
  "register": "ogc-building-block-register",
  "version": "0.1",
  "dateOfLastChange": "2025-10-22",
  "link": "https://github.com/opengeospatial/bblock-template",
  "sources": [
    {
      "title": "Sample source document",
      "link": "https://example.com/sources/1"
    }
  ],
  "maturity": "draft",
  "scope": "unstable",
  "tags": [
    "templates"
  ],
  "shaclShapes": {
    "ogc.bbr.test.properties.person": [
      "https://smrgeoinfo.github.io/OCGbuildingBlockTest/_sources/properties/person/rules.shacl"
    ],
    "ogc.bbr.test.properties.organization": [
      "https://smrgeoinfo.github.io/OCGbuildingBlockTest/_sources/properties/organization/rules.shacl"
    ],
    "ogc.bbr.test.properties.identifier": [
      "https://smrgeoinfo.github.io/OCGbuildingBlockTest/_sources/properties/identifier/rules.shacl"
    ]
  },
  "dependsOn": [
    "ogc.bbr.test.properties.organization",
    "ogc.bbr.test.properties.identifier"
  ],
  "ldContext": "https://smrgeoinfo.github.io/OCGbuildingBlockTest/build/annotated/bbr/test/properties/person/context.jsonld",
  "schema": {
    "application/yaml": "https://smrgeoinfo.github.io/OCGbuildingBlockTest/build/annotated/bbr/test/properties/person/schema.yaml",
    "application/json": "https://smrgeoinfo.github.io/OCGbuildingBlockTest/build/annotated/bbr/test/properties/person/schema.json"
  },
  "sourceSchema": "https://smrgeoinfo.github.io/OCGbuildingBlockTest/_sources/properties/person/schema.yaml",
  "sourceLdContext": "https://smrgeoinfo.github.io/OCGbuildingBlockTest/_sources/properties/person/context.jsonld",
  "sourceFiles": "https://smrgeoinfo.github.io/OCGbuildingBlockTest/_sources/properties/person/",
  "rdfData": [],
  "validationPassed": false,
  "testOutputs": "https://github.com/smrgeoinfo/OCGbuildingBlockTest/blob/master/build/tests/bbr/test/properties/person/",
  "description": "## Person properties\n\nDefines a set of properties for use describing a person for the schema.org implementation of the [Cross Domain Interoperability Framework](https://cross-domain-interoperability-framework.github.io/cdifbook/metadata/schemaorgimplementation.html#implementation-of-metadata-content-items) (CDIF) discovery profile.",
  "examples": [
    {
      "title": "Example person.",
      "content": "Example person instance.\n\nIn **Markdown** format.",
      "prefixes": {
        "schema": "https://schema.org"
      },
      "snippets": [
        {
          "language": "json",
          "ref": "examplePerson.json",
          "code": "{\n  \"@context\": {\n    \"schema\": \"https://schema.org/\",\n    \"ex\": \"https://example.org/\"\n  },\n  \"@id\": \"ex:PersonExample_zZc\",\n  \"@type\": \"schema:Person\",\n  \"schema:name\": \"Joe Test\",\n  \"schema:alternateName\": \"Test, Joe\",\n  \"schema:affiliation\": \"some organization, schema TBD\",\n  \"schema:description\": \"Metadata specialist, based in Portland, Maine\",\n  \"schema:identifier\": {\n    \"@type\": \"schema:PropertyValue\",\n    \"schema:propertyID\": \"https://doi.org\",\n    \"schema:value\": \"iY\",\n    \"schema:url\": \"https://doi.org/iY\"\n  },\n  \"schema:sameAs\": [\n    \"https://ark.org/46737\",\n    \"uri:test:43737\"\n  ]\n}",
          "url": "https://smrgeoinfo.github.io/OCGbuildingBlockTest/build/tests/bbr/test/properties/person/example_1_1.json"
        },
        {
          "language": "jsonld",
          "code": "{\n  \"@context\": [\n    {\n      \"schema\": \"https://schema.org\"\n    },\n    \"https://smrgeoinfo.github.io/OCGbuildingBlockTest/build/annotated/bbr/test/properties/person/context.jsonld\",\n    {\n      \"schema\": \"https://schema.org/\",\n      \"ex\": \"https://example.org/\"\n    }\n  ],\n  \"@id\": \"ex:PersonExample_zZc\",\n  \"@type\": \"schema:Person\",\n  \"schema:name\": \"Joe Test\",\n  \"schema:alternateName\": \"Test, Joe\",\n  \"schema:affiliation\": \"some organization, schema TBD\",\n  \"schema:description\": \"Metadata specialist, based in Portland, Maine\",\n  \"schema:identifier\": {\n    \"@type\": \"schema:PropertyValue\",\n    \"schema:propertyID\": \"https://doi.org\",\n    \"schema:value\": \"iY\",\n    \"schema:url\": \"https://doi.org/iY\"\n  },\n  \"schema:sameAs\": [\n    \"https://ark.org/46737\",\n    \"uri:test:43737\"\n  ]\n}",
          "url": "https://smrgeoinfo.github.io/OCGbuildingBlockTest/build/tests/bbr/test/properties/person/example_1_1.jsonld"
        },
        {
          "language": "ttl",
          "code": "@prefix ex: <https://example.org/> .\n@prefix schema: <https://schema.org/> .\n\nex:PersonExample_zZc a schema:Person ;\n    schema:affiliation \"some organization, schema TBD\" ;\n    schema:alternateName \"Test, Joe\" ;\n    schema:description \"Metadata specialist, based in Portland, Maine\" ;\n    schema:identifier [ a schema:PropertyValue ;\n            schema:propertyID \"https://doi.org\" ;\n            schema:url \"https://doi.org/iY\" ;\n            schema:value \"iY\" ] ;\n    schema:name \"Joe Test\" ;\n    schema:sameAs \"https://ark.org/46737\",\n        \"uri:test:43737\" .\n\n",
          "url": "https://smrgeoinfo.github.io/OCGbuildingBlockTest/build/tests/bbr/test/properties/person/example_1_1.ttl"
        }
      ]
    }
  ],
  "annotatedSchema": "$schema: https://json-schema.org/draft/2020-12/schema\ndescription: My example schema\ntype: object\nproperties:\n  '@id':\n    type: string\n  '@type':\n    type: string\n    const: schema:Person\n  schema:name:\n    type: string\n    description: string label for person that is meaningful for human users\n  schema:description:\n    type: string\n  schema:identifier:\n    description: identifier for person\n    anyOf:\n    - $ref: https://smrgeoinfo.github.io/OCGbuildingBlockTest/build/annotated/bbr/test/properties/identifier/schema.yaml\n    - type: string\n  schema:alternateName:\n    type: string\n    description: other labels by which the person might be known\n  schema:affiliation:\n    $ref: https://smrgeoinfo.github.io/OCGbuildingBlockTest/build/annotated/bbr/test/properties/organization/schema.yaml\n  schema:contactPoint:\n    type: object\n    properties:\n      schema:email:\n        type: string\n    description: restrict to email only. Schema.org allows telephone and postal contacts\n      as well\n  schema:sameAs:\n    type: array\n    description: other identifiers for the person\n    items:\n      type: string\nx-jsonld-extra-terms:\n  schema: https://schema.org\n",
  "gitRepository": "https://github.com/smrgeoinfo/OCGbuildingBlockTest",
  "gitPath": "_sources/properties/person"
}