{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "object",
  "title": "Base properties for CDIF discovery metadata schema, with schema: prefixes",
  "description": "Building block specifies properties for CDIF schama.org discovery record",
  "properties": {
    "@id": {
      "type": "string",
      "description": "The URI for the resource should be the @id value for the root of the JSON instance document tree. Note that this identifier can be interpreted to identify the resource that is the subject of this metadata record, or the JSON-LD object that is the digital object containing the metadata information."
    },
    "@type": {
      "description": "a schema.org Class that specifies the expected information content for the metadata record. For CDIF, 'schema:Dataset' is required, but other possible values (e.g. CreativeWork, SoftwareApplication, Product, WebAPI) are sometimes included to enable the schema.org properties used to describe the resource without schema.org validation errors.",
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "schema:CreativeWork",
          "schema:SoftwareApplication",
          "schema:SoftwareSourceCode",
          "schema:Product",
          "schema:WebAPI",
          "schema:Dataset",
          "schema:DigitalDocument",
          "schema:Collection",
          "schema:ImageObject",
          "schema:DataCatalog",
          "schema:DefinedTermSet"
        ],
        "minItems": 1,
        "default": "schema:Dataset",
        "contains": {
          "const": "schema:Dataset"
        }
      }
    },
    "schema:name": {
      "type": "string",
      "description": "A descriptive name of a dataset (e.g., 'Snow depth in Northern Hemisphere'). The name should uniquely identify the described resource for human use, in the scope of the metadata catalog containing this metadata record."
    },
    "schema:additionalType": {
      "description": "identifiers for datatypes from other vocabularies (not schema.org) that apply to this metadata.",
      "type": "array",
      "minItems": 0,
      "items": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "$ref": "#/$defs/DefinedTerm"
          }
        ]
      }
    },
    "schema:description": {
      "type": "string",
      "description": "A short summary describing a dataset. This text will be indexed by search applications, so the more information here, the better."
    },
    "schema:identifier": {
      "description": "identifier for the resource",
      "anyOf": [
        {
          "$ref": "#/$defs/Identifier"
        },
        {
          "type": "string"
        }
      ]
    },
    "schema:sameAs": {
      "description": "alternate identifiers for the resource",
      "array": {
        "minItems": 0,
        "items": {
          "anyOf": [
            {
              "$ref": "#/$defs/Identifier"
            },
            {
              "type": "string"
            }
          ]
        }
      }
    },
    "schema:version": {
      "type": [
        "string",
        "number"
      ],
      "description": "The version number or identifier for this dataset (text or numeric). The values should sort from oldest to newest using an alphanumeric sort on version strings"
    },
    "schema:url": {
      "type": "string",
      "format": "uri",
      "description": "Web Location of a page describing the dataset (landing page), typically providing links or instructions to get the actual resource content; analogous to dcat:accessURL. If a direct link is available to get the data, put in distribution/contentUrl"
    },
    "schema:inLanguage": {
      "type": "string",
      "description": "the language of the dataset content"
    },
    "schema:dateModified": {
      "type": "string",
      "description": "ISO8601 formatted date (and optional time if relevant) when Dataset was last updated"
    },
    "schema:datePublished": {
      "type": "string",
      "description": "ISO8601 formatted date (and optional time if relevant) when Dataset was made public."
    },
    "schema:conditionsOfAccess": {
      "description": "text statement of conditions for use and access; if an online resource documents the restrictions or a URI is used to identify the conditions, recommend using schema:CreativeWork to provide a label (name) and an identifier (URI or URL). ",
      "type": "array",
      "minItems": 0,
      "items": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "$ref": "#/$defs/LabeledLink"
          }
        ]
      }
    },
    "schema:license": {
      "description": "legal statement of conditions for use and access; recommend using schema:CreativeWork to provide a label (name) for the license, and an identifier. Sources of license identifiers: https://opensource.org/licenses/, https://creativecommons.org/about/cclicenses/, https://spdx.org/licenses/, http://cor.esipfed.org/ont/earthcube/swl. If only a string is provided, it should be an identifier for the license, ideally a resolvable URI",
      "type": "array",
      "minItems": 0,
      "items": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "$ref": "#/$defs/LabeledLink"
          }
        ]
      }
    },
    "schema:relatedLink": {
      "type": "array",
      "description": "",
      "items": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "const": "schema:LinkRole"
          },
          "schema:linkRelationship": {
            "type": "string"
          },
          "target": {
            "type": "object",
            "properties": {
              "@type": {
                "type": "string",
                "const": "schema:EntryPoint"
              },
              "schema:encodingFormat": {
                "type": "string"
              },
              "schema:name": {
                "type": "string"
              },
              "schema:url": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "schema:publishingPrinciples": {
      "description": "FDOF digitalObjectMutability, RDA digitalObjectPolicy, FDOF PersistencyPolicy. Policies related to maintenance, update, expected time to live. If an online resource documents the policies or a URI is used to identify the conditions, recommend using schema:CreativeWork to provide a label (name) and an identifier (URI or URL).",
      "type": "array",
      "minItems": 0,
      "items": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "$ref": "#/$defs/LabeledLink"
          }
        ]
      }
    }
  },
  "allOf": [
    {
      "required": [
        "@id",
        "@type",
        "@context",
        "schema:name",
        "schema:identifier",
        "schema:dateModified"
      ]
    },
    {
      "anyOf": [
        {
          "required": [
            "schema:license"
          ]
        },
        {
          "required": [
            "schema:conditionsOfAccess"
          ]
        }
      ]
    }
  ],
  "$defs": {
    "LabeledLink": {
      "$ref": "https://smrgeoinfo.github.io/OCGbuildingBlockTest/build/annotated/bbr/test/properties/labeledLink/schema.json"
    },
    "DefinedTerm": {
      "$ref": "https://smrgeoinfo.github.io/OCGbuildingBlockTest/build/annotated/bbr/test/properties/definedTerm/schema.json"
    },
    "Identifier": {
      "$ref": "https://smrgeoinfo.github.io/OCGbuildingBlockTest/build/annotated/bbr/test/properties/identifier/schema.json"
    }
  },
  "x-jsonld-extra-terms": {
    "schema": "https://schema.org"
  }
}