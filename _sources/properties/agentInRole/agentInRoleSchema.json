{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "type": "object",
    "description": "For more granularity on how a person contributed to a Dataset, use schema:Role. The schema.org documentation does not state that the Role type is an expected data type of author, creator and contributor, but that is addressed in this blog post (http://blog.schema.org/2014/06/introducing-role.html). see https://github.com/ESIPFed/science-on-schema.org/blob/develop/guides/Dataset.md#roles-of-people",
    "properties": {
        "@type": {
            "type": "string",
            "default": "schema:Role",
            "const": "schema:Role"
        },
        "schema:roleName": {
            "anyOf": [
                {"type": "string"},
                {"$ref": "#/$defs/definedTerm_type"}
            ]
        },
        "schema:contributor": {
            "type": "object",
            "items": {
                "anyOf": [
                    {"$ref": "#/$defs/Person"},
                    {"$ref": "#/$defs/Organization"}
                ]
            }
        }
    },
    "required": [
        "schema:roleName",
        "schema:contributor"
    ],
    "$defs": {
        "Person": {
            "type": "object",
            "properties": {
                "@id": {"type": "string"},
                "@type": {
                    "type": "string",
                    "const": "schema:Person",
                    "default": "schema:Person"
                },
                "schema:name": {
                    "type": "string",
                    "description": "string label for person that is meaningful for human users"
                },
                "schema:affiliation": {"$ref": "#/$defs/Organization"},
                "schema:description": {"type": "string"},
                "schema:identifier": {
                    "description": "identifier for person",
                    "anyOf": [
                        {
                            "description": "Properties for a schema.org identifier",
                            "type": "object",
                            "properties": {
                                "@type": {
                                    "type": "string",
                                    "const": "schema:PropertyValue"
                                },
                                "schema:propertyID": {
                                    "type": "string",
                                    "description": "identifier for the identifier schema, e.g. DOI, ARK.  Get values from https://registry.identifiers.org/registry/ for interoperability"
                                },
                                "schema:value": {
                                    "type": "string",
                                    "description": "the identifier string. E.g. 10.5066/F7VX0DMQ"
                                },
                                "schema:url":
                                    "type": "string",
                                    "format": "uri",
                                    "description": "web-resolveable string for the identifier; host name part is location of a resolver that will return some representation for the given identifier value. E.g. https://doi.org/10.5066/F7VX0DMQ "
                                }
                            }
                        },
                        {"type": "string"}
                    ]
                },
                "schema:contactPoint": {
                    "description": "restrict to email only. Schema.org allows telephone and postal contacts as well",
                    "type": "object",
                    "properties": {
                        "@type": {
                            "type": "string",
                            "const": "schema:ContactPoint",
                            "default": "schema:ContactPoint"
                        },
                        "schema:email": {"type": "string"}
                    }
                },
                "schema:alternateName": {
                    "type": "string",
                    "description": "other labels by which the person might be known"
                },
                "schema:sameAs": {
                    "type": "array",
                    "description": "other identifiers for the person",
                    "items": {"type": "string"}
                }
            },
            "required": [
                "@type",
                "schema:name"
            ]
        },
        "Organization": {
            "type": "object",
            "properties": {
                "@id": {"type": "string"},
                "@type": {
                    "type": "string",
                    "const": "schema:Organization",
                    "default": "schema:Organization"
                },
                "schema:additionalType": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "type": "string",
                                "enum": [
                                    "schema:FundingAgency",
                                    "schema:Consortium",
                                    "schema:Corporation",
                                    "schema:EducationalOrganization",
                                    "schema:FundingScheme",
                                    "schema:GovernmentOrganization",
                                    "schema:NGO",
                                    "schema:Project",
                                    "schema:ResearchOrganization"
                                ]
                            },
                            {"$ref": "#/$defs/definedTerm_type"},
                            {"type": "string"}
                        ]
                    }
                },
                "schema:name": {
                    "type": "string",
                    "description": "string label for organization that is meaningful for human users"
                },
                "schema:alternateName": {
                    "type": "string",
                    "description": "other labels by which the organization might be known"
                },
                "schema:description": {"type": "string"},
                "schema:identifier": {"type": "string"},
                "schema:sameAs": {
                    "type": "array",
                    "description": "other identifiers for the organization",
                    "items": {"type": "string"}
                }
            },
            "allOf": [
                {
                    "required": ["@type"]
                },
                {
                    "anyOf": [
                        {
                            "required": ["schema:name"]
                        },
                        {
                            "required": ["schema:identifier"]
                        }
                    ]
                }
            ]
        },
        "definedTerm_type": {
            "type": "object",
            "properties": {
                "@type": {"const": "schema:DefinedTerm"},
                "schema:name": {
                    "type": "string",
                    "description": "text label for the keyord that is useful to human user"
                },
                "schema:identifier": {"$ref": "#/$defs/identifier_type"},
                "schema:inDefinedTermSet": {
                    "type": "string",
                    "description": "Identifier for the controlled vocabulary responsible for this keyword."
                },
                "schema:termCode": {
                    "type": "string",
                    "description": "A representative code for this keyword in the controlled vocabulary (Optional).  Analogous to skos:Notation"
                }
            },
            "allOf": [
                {
                    "required": ["@type"]
                },
                {
                    "anyOf": [
                        {
                            "required": ["schema:name"]
                        },
                        {
                            "required": ["schema:identifier"]
                        }
                    ]
                }
            ]
        },
        "identifier_type": {
            "type": "object",
            "properties": {
                "@type": {
                    "type": "string",
                    "const": "schema:PropertyValue",
                    "default": "schema:PropertyValue"
                },
                "schema:propertyID": {
                    "type": "string",
                    "description": "identifier for the identifier schema, e.g. DOI, ARK.  Get values from https://registry.identifiers.org/registry/ for interoperability"
                },
                "schema:value": {
                    "type": "string",
                    "description": "the identifier string. E.g. doi:10.5066/F7VX0DMQ"
                },
                "schema:url":
                    "type": "string",
                    "description": "web-resolveable string for the identifier; host name part is location of a resolver that will return some representation for the given identifier value. E.g. https://doi.org/10.5066/F7VX0DMQ "
                }
            },
            "allOf": [
                {
                    "required": ["@type"]
                },
                {
                    "anyOf": [
                        {
                            "required": ["schema:value"]
                        },
                        {
                            "required": ["schema:url"]
                        }
                    ]
                }
            ]
        }
    }
}